summary(model.fit)
new.obs = c(1, 35, 30, 0, 1)
predict.v2 = sum(model.fit$coef * new.obs)
new.obs = c(1, 35, 30,1, 0, 1)
predict.v2 = sum(model.fit$coef * new.obs)
predict.v2
beta.ndrm.ch = beta.hat.0 + beta.hat.age*35 + beta.hat.bmi* 30 + beta.hat.male * 1 + beta.hat.TT * 1
beta.ndrm.ch
new.obs = c(1, 35, 30,1, 0, 1)
beta.ndrm.ch.v2 = sum(model.fit$coef * new.obs)
beta.ndrm.ch.v2
beta.ndrm.ch.v3 = predict(model.fit, new = new.obs.2)
new.obs.2 = dataframe(c(Age = 35, pre.BMI = 30, Gender =
"Male"), geno = "TT")
new.obs.2 = data.frame(c(Age = 35, pre.BMI = 30, Gender =
"Male"), geno = "TT")
beta.ndrm.ch.v3 = predict(model.fit, new = new.obs.2)
ndrm.ch.fit = lm(NDRM.CH ~ Age + pre.BMI + Gender + geno)
summary(model.fit)
new.obs = c(1, 35, 30,1, 0, 1)
beta.ndrm.ch.v2 = sum(ndrm.ch.fit$coef * new.obs)
beta.ndrm.ch.v2
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/famuss.Rdata")
attach(fms)
table(Gender)
#########
## 24 April 2015
beta.hat.0 = 97.1023
beta.hat.age = -1.094
beta.hat.bmi = -0.4989
beta.hat.male = -21.9709
beta.hat.CT = 4.0715
beta.hat.TT = 8.0509
beta.ndrm.ch = beta.hat.0 + beta.hat.age*35 + beta.hat.bmi* 30 + beta.hat.male * 1 + beta.hat.TT * 1
beta.ndrm.ch
typeof(Gender)
table(Gender)
gender.new = Gender+1
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/ed.latino.Rdata")
attach(ed.latino)
ed.latino.full.rows = 1:nrow(ed.latino) #nrow gets the number of rows in a dataframe
set.seed(6578) #xxxx are the last 4 digits of your HUID
#   randomly sample the rows that you want in the BRFSS data
ed.latino.sample.rows = sample(ed.latino.full.rows,size=1000, replace=FALSE)
#  now get the corresponding rows from BRFSS for your sample
end.latino.sample = ed.latino[ed.latino.sample.rows,]
detach(ed.latino)
attach(ed.latino.sample)
attach(ed.latino)
ed.latino.sample = ed.latino[ed.latino.sample.rows,]
detach(ed.latino)
attach(ed.latino.sample)
summary(lm(achieve ~ imm_age + english + mex))
attach(ed.latino)
ed.latino.full.rows = 1:nrow(ed.latino) #nrow gets the number of rows in a dataframe
set.seed(6578) #xxxx are the last 4 digits of your HUID
#   randomly sample the rows that you want in the BRFSS data
ed.latino.sample.rows = sample(ed.latino.full.rows,size=100, replace=FALSE)
#  now get the corresponding rows from BRFSS for your sample
ed.latino.sample = ed.latino[ed.latino.sample.rows,]
detach(ed.latino)
attach(ed.latino.sample)
summary(lm(achieve ~ imm_age + english + mex))
t.test(achieve ~ mex)
mean(achieve[mex == 0])
mean(achieve[mex == 0], na.rm=T)
summary(achieve)
summary(achieve[mex == 0])
summary(achieve[mex == 1])
prop.vf.nvp = 60/147
prop.vf.nvp
prop.vf.lpv = 27/140
prop.vf.lpv
rr.vf.nvp.lpv = prop.vf.nvp / prop.vf.lpr
rr.vf.nvp.lpv = prop.vf.nvp / prop.vf.lpv
rr.vf.nvp.lpv
exp.nvp.vf = 147 * 87 / 287
exp.nvp.vf
exp.nvp.sd = 147 * 200 / 287
exp.nvp.sd
exp.lpv.vf = 140 * 87 / 287
exp.lpv.vf
exp.lpv.sd = 140 * 200 /287
exp.lpv.sd
## cancors data
hiv.trial.results = matrix(c(60, 27, 87, 113),
nrow=2,  ncol=2,byrow=T)
hiv.chisq.test = chisq.test(hiv.trial.results, correct=FALSE)
## cancors data
attach(cancors.elig.core)
hiv.chisq.test = chisq.test(hiv.trial.results, correct=FALSE)
hiv.chisq.test
hiv.chisq.test$observed
hiv.chisq,test$expected
hiv.chisq.test$observed
hiv.chisq.test$expected
prop.vf.nvp = 60/147
prop.vf.nvp
prop.vf.lpv = 27/140
prop.vf.lpv
rr.vf.nvp.lpv = prop.vf.nvp / prop.vf.lpv
rr.vf.nvp.lpv
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/alldatainpsls.RData")
View(ta28.08)
View(ta28.07)
View(ta28.06)
View(ta28.04)
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/fev.Rdata")
t.test(fev ~ Smoke)
attach(fev)
t.test(fev ~ Smoke)
help(t.test)
summary(fev)
summary(fev$fev)
lung.function = fev
detach(fev)
attach(lung.function)
attach(fev)
detach(fev)
attach(lung.function)
lung.function.rosner = fev
detach(fev)
attach(lung.function.rosner)
t.test(fev ~ Smoke)
attach(lung.function.rosner)
t.test(fev ~ Smoke)
summary(fev)
save(lung.function.rosner, file="../lecture_datasets/stat_102/lung.function.rosner.Rdata")
save(lung.function.rosner, file="lung.function.rosner.Rdata")
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/lung.function.rosner.Rdata")
attach(lung.function.rosner)
t.test(fev ~ Smoke)
gender = factor(sex, labels=c("Female", "Male"))
gender = factor(Sex, labels=c("Female", "Male"))
smoking = factor(Smoke, labels=c("No", "Yes"))
t.test(fev ~ smoking)
t.test(fev ~ gender)
hist(fev)
summary(fev)
table(gender)
sd(fev[Sex == 0])
sd(fev[Sex == 1])
lm(fev ~ gender + smoking + age)
lm(fev ~ gender + smoking + Age)
summary(lm(fev ~ gender + smoking + Age))
summary(lm(fev ~ gender + smoking + Age + hgt))
summary(lm(fev ~ gender + smoking + Age + Hgt))
summary(lm(fev ~ smoking))
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/lung.function.rosner.Rdata")
attach(lung.function.rosner)
lung.function.rosner$gender = factor(Sex, labels=c("Female", "Male"))
lung.function.rosner$smoking = factor(Smoke, labels=c("No", "Yes"))
t.test(fev ~ smoking)
detach(lung.function.rosner)
attach(lung.function.rosner)
t.test(fev ~ smoking)
sd(fev)
sd(smoking)
table(smoking, gender)
table.smoking.gender = table(smoking, gender)
chisq.test(table.smoking.gender)
t.test(Age ~ smoking)
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/Kate_Makaroff.RData")
attach(project_data)
summary(mod<-lm(surv.time ~ snp1))
table(snp1)
values.snp = as.numeric(snp1)
View(values.snp)
table(values.snp1, snp1)
values.snp1 = as.numeric(snp1)
table(values.snp1, snp1)
snp1.newref = rlevel(snp1, ref = 2)
snp1.newref = relevel(snp1, ref = 2)
summary(lm(surv.time ~ snp1.newref))
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/Kate_Makaroff.RData")
attach(project_data)
table(snp1)
values.snp1 = as.numeric(snp1)
table(values.snp1, snp1)
snp1.newref = relevel(snp1, ref = 2)
summary(lm(surv.time ~ snp1.newref))
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/lung.function.rosner.Rdata")
summary(lm(fev ~ Age))
attach(lung.function.rosner)
summary(lm(fev ~ Age))
sd(fev)
sd(Age)
hist(Age)
mean(Age)
sd(Age[smoking == 0])
sd(Age[Smoke == 0])
sd(Age[Smoke == 1])
table(Smoke)
mean(Age[Smoke == 0])
mean(Age[Smoke == 1])
attach(lung.function.rosner)
lung.function.rosner$gender = factor(Sex, labels=c("Female", "Male"))
lung.function.rosner$smoking = factor(Smoke, labels=c("No", "Yes"))
save(lung.function.rosner, file="lung.function.rosner.Rdata")
summary(lm(fev ~ gender + smoking + Age + gender))
detach(lung.function.rosner)
attach(lung.function.rosner)
summary(lm(fev ~ gender + smoking + Age + gender))
summary(lm(fev ~ gender + smoking + Age ))
tb.smoke.gender = table(smoking, gender)
addmargins(tb.smoke.gender)
chisq.test(tb.smoke.gender)
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/Kate_Makaroff.RData")
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/lung.function.rosner.Rdata")
attach(lung.function.rosner)
sd(fev)
mean(fev)
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/Kate_Makaroff.RData")
View(project_data)
names(project_data)
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/Stat 102 example project dataset.Rdata")
View(project_data)
## conduct 100 t-tests  for first 100 genes in Golub data using a for loop
## Setting up the data is similar to what was done earlier, with some
##    small differences
library(golubEsets)
data(Golub_Merge)
golub = Golub_Merge
gene.set = 1:100
number.genes = length(gene.set)
golub.expression = exprs(golub)[gene.set,]
golub.pheno=pData(golub)
leuk.type = golub.pheno$ALL.AML == "AML"
golub.expression.trans = t(golub.expression)
all.aml.expression = as.matrix(cbind(leuk.type,
golub.expression.trans))
##  initialize vectors of statistics and p-values
gene.t.statistic = rep(1, len = number.genes)
gene.p.value = rep(1, len= number.genes)
##  for loop to calculate t-statistics
for (ii in 1:number.genes){
##   extract t-statistic value
gene.t.statistic[ii] = t.test(all.aml.expression[,ii+1] ~ leuk.type,
alternative = "two.sided", mu = 0,
var.equal = FALSE, conf.level = 0.95)$statistic
##   extract p-value
gene.p.value[ii] = t.test(all.aml.expression[,ii+1] ~ leuk.type,
alternative = "two.sided", mu = 0,
var.equal = FALSE, conf.level = 0.95)$p.val
}
##  attach p-values to gene names
t.stat.genes = cbind(gene.t.statistic, gene.p.value, golub.expression[,2])
t.stat.genes.only = t.stat.genes[,1:2]
View(t.stat.genes.only)
View(t.stat.genes)
colnames(t.stat.genes) = c("t-statistic", "p-value", "expression")
View(t.stat.genes)
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/Kate_Makaroff.RData")
View(project_data)
help(pchisq)
load("~/Dropbox/working_files/teaching/lecture_datasets/stat102_data/lung.function.rosner.Rdata")
attach(lung.function.rosner)
summary(lm(fev ~ gender + smoking + Age ))
(100*300)^2
100 * 300
(0.99*0.01)/(0.99*(0.01)+0.05*(0.99))
24/89
37/86
24/84
157/270
157/170
196/200
0.92 * 64
(2.7 * 4 + 2.7*4 + 2.00 * 4 + 2.7 * 4 + 2.7*4 +
3.0 * 4 + 3.33 * 4 + 2.7 * 4)/32
3141 - 1329
3061 + 80
3141 - 1500
55.96 + 51.46 + 400 + 21
(55.96 + 51.46 + 400 + 21)/4
(55.96 + 51.46 + 400 + 21+ 50)/4
(55.96 + 51.46 + 400 + 21+ 50)
load("~/Dropbox/working_files/teaching/open_intro/oi_biostat/data/famuss.oi.biostat.Rdata")
View(famuss.oi.biostat)
load("~/Dropbox/working_files/teaching/open_intro/oi_biostat/data/famuss.Rdata")
attach(fms)
muscle.change = data.frame(id,NDRM.CH, DRM.CH,  Gender, Age, Race, Pre.height,
Pre.weight, actn3_r577x)
muscle.change.nomiss = na.omit(muscle.change)
addmargins(table(fms$Race, useNA = "always"))
addmargins(table(fms$id, useNA = "always"))
id = muscle.change.nomiss$id
ndrm.ch = muscle.change.nomiss$NDRM.CH
drm.ch = muscle.change.nomiss$DRM.CH
sex = muscle.change.nomiss$Gender
age = muscle.change.nomiss$Age
race = muscle.change.nomiss$Race
height = muscle.change.nomiss$Pre.height
weight = muscle.change.nomiss$Pre.weight
actn3.r577x = muscle.change.nomiss$actn3_r577x
famuss.oi.biostat = data.frame(id, ndrm.ch, drm.ch, sex, age, race, height, weight, actn3.r577x)
save(famuss.oi.biostat, file="famuss.oi.biostat.Rdata")
library("Hmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
summary(famuss.oi.biostat$age~ famuss.oi.biostat$sex)
summary(famuss.oi.biostat$age~ famuss.oi.biostat$actn3.r577x)
# code below from OI, 2nd ed source
#  library(xtable); data(email50); email50[c(1,2,3,50),c("spam", "num_char", "line_breaks", "format", "number")]; xtable(email50[c(1,2,3,50),c("spam", "num_char", "line_breaks", "format", "number")], digits=0)
load("~/Dropbox/working_files/teaching/open_intro/oi_biostat/data/famuss.oi.biostat.Rdata")
library(xtable)
install.packages("xtable")
library(xtable)
famuss.oi.biostat[c(1,2,3,595),c("ndrm.ch", "drm.ch", "sex", "age", "race", "height", "weight", "actn3.r577x")]
famuss.oi.biostat = data.frame(ndrm.ch, drm.ch, sex, age, race, height, weight, actn3.r577x)
save(famuss.oi.biostat, file="famuss.oi.biostat.Rdata")
library("Hmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
summary(famuss.oi.biostat$age~ famuss.oi.biostat$sex)
summary(famuss.oi.biostat$age~ famuss.oi.biostat$actn3.r577x)
# code below from OI, 2nd ed source
#  library(xtable); data(email50); email50[c(1,2,3,50),c("spam", "num_char", "line_breaks", "format", "number")]; xtable(email50[c(1,2,3,50),c("spam", "num_char", "line_breaks", "format", "number")], digits=0)
load("~/Dropbox/working_files/teaching/open_intro/oi_biostat/data/famuss.oi.biostat.Rdata")
library(xtable)
famuss.oi.biostat[c(1,2,3,595),c("ndrm.ch", "drm.ch", "sex", "age", "race", "height", "weight", "actn3.r577x")]
famuss.oi.biostat[c(1,2,3,595),c("ndrm.ch", "sex", "age", "race", "height", "weight", "actn3.r577x")]
famuss.oi.biostat
famuss.oi.biostat = data.frame(ndrm.ch, drm.ch, sex, age, race, height, weight, actn3.r577x)
save(famuss.oi.biostat, file="famuss.oi.biostat.Rdata")
library("Hmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
summary(famuss.oi.biostat$age~ famuss.oi.biostat$sex)
summary(famuss.oi.biostat$age~ famuss.oi.biostat$actn3.r577x)
# code below from OI, 2nd ed source
#  library(xtable); data(email50); email50[c(1,2,3,50),c("spam", "num_char", "line_breaks", "format", "number")]; xtable(email50[c(1,2,3,50),c("spam", "num_char", "line_breaks", "format", "number")], digits=0)
load("~/Dropbox/working_files/teaching/open_intro/oi_biostat/data/famuss.oi.biostat.Rdata")
library(xtable)
famuss.oi.biostat[c(1,2,3,595),c("ndrm.ch", "sex", "age", "race", "height", "weight", "actn3.r577x")]
famuss.oi.biostat
detach(famuss.oi.biostat)
View(famuss.oi.biostat)
load("~/Dropbox/working_files/teaching/open_intro/oi_biostat/data/famuss.Rdata")
attach(fms)
muscle.change = data.frame(id,NDRM.CH, DRM.CH,  Gender, Age, Race, Pre.height,
Pre.weight, actn3_r577x)
muscle.change.nomiss = na.omit(muscle.change)
addmargins(table(fms$Race, useNA = "always"))
addmargins(table(fms$id, useNA = "always"))
## eliminate cases with any missing data
## change var names consistent with our convention
id = muscle.change.nomiss$id
ndrm.ch = muscle.change.nomiss$NDRM.CH
drm.ch = muscle.change.nomiss$DRM.CH
sex = muscle.change.nomiss$Gender
age = muscle.change.nomiss$Age
race = muscle.change.nomiss$Race
height = muscle.change.nomiss$Pre.height
weight = muscle.change.nomiss$Pre.weight
actn3.r577x = muscle.change.nomiss$actn3_r577x
famuss.oi.biostat = data.frame(ndrm.ch, drm.ch, sex, age, race, height, weight, actn3.r577x)
save(famuss.oi.biostat, file="famuss.oi.biostat.Rdata")
library("Hmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
summary(famuss.oi.biostat$age~ famuss.oi.biostat$sex)
summary(famuss.oi.biostat$age~ famuss.oi.biostat$actn3.r577x)
# code below from OI, 2nd ed source
#  library(xtable); data(email50); email50[c(1,2,3,50),c("spam", "num_char", "line_breaks", "format", "number")]; xtable(email50[c(1,2,3,50),c("spam", "num_char", "line_breaks", "format", "number")], digits=0)
load("~/Dropbox/working_files/teaching/open_intro/oi_biostat/data/famuss.oi.biostat.Rdata")
library(xtable)
famuss.oi.biostat[c(1,2,3,595),c("ndrm.ch", "sex", "age", "race", "height", "weight", "actn3.r577x")]
famuss.oi.biostat
famuss.oi.biostat = data.frame(ndrm.ch, drm.ch, sex, age, race, height, weight, actn3.r577x)
save(famuss.oi.biostat, file="famuss.oi.biostat.Rdata")
famuss.oi.biostat
famuss.oi.biostat[c(1,2,3,595),c("ndrm.ch", "sex", "age", "race", "height", "weight", "actn3.r577x")]
famuss.oi.biostat[c(1,2,3,595),c("sex", "age", "race", "height", "weight", "actn3.r577x", "ndrm.ch")]
xtable(famuss.oi.biostat[c(1,2,3,595),c( "sex", "age", "race", "height", "weight", "actn3.r577x", "ndrm.ch")]digits = 1)
xtable(famuss.oi.biostat[c(1,2,3,595),c( "sex", "age", "race", "height", "weight", "actn3.r577x", "ndrm.ch")],digits = 1)
table(famuss.oi.biostat$race)
caries <- read.table("~/Dropbox/working_files/downloads/Data Lesaffre Lawson/Data/caries.txt", header=TRUE, quote="\"")
View(caries)
table(caries$frbr)
(58 + 73 + 42)/ (168 + 157 + 2)
install.packages("bayesSurv")
library("bayesSurv", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(tandmob2)
table(tandmob2$GENDER, tandmob2$STARTBR)
table(tandmob2$PROVINCE, tandmob2$STARTBR)
data(tandmobRoos)
View(tandmobRoos)
table(tandmobRoos$GENDER, tandmobRoos$STARTBR)
table(tandmobRoos$GENDER)
table(tandmobRoos$STARTBR)
table(tandmob2$GENDER)
setwd("~/oi_biostat/data/leap/excel")
LEAP = read.csv("leap_demo_outcome.csv")
setwd("~/oi_biostat/data/leap")
LEAP[LEAP==""] = NA
LEAP = droplevels(LEAP)
a = LEAP$intent.to.treat == "Yes"
b = (LEAP$Baseline.Skin.Prick.Test == 0)
c = a & b
leap.tmp = LEAP[c,]
View(leap.tmp)
table(c)
leap.tmp = LEAP[c]
leap.tmp = LEAP[c,]
View(leap.tmp)
setwd("~/oi_biostat/data/leap/excel")
LEAP = read.csv("leap_demo_outcome.csv")
setwd("~/oi_biostat/data/leap")
LEAP[LEAP==""] = NA
LEAP = droplevels(LEAP)
a = LEAP$intent.to.treat == "Yes"
b = (LEAP$Baseline.Skin.Prick.Test == 0)
c = a & b
LEAP = LEAP[c,]
save(LEAP, file="LEAP.Rdata")
addmargins(table(LEAP$treatment.group, LEAP$outcome.V60))
table(is.na(LEAP$outcome.V60))
4/216
4/261
addmargins(table(LEAP$treatment.group, LEAP$outcome.V60), useNA="always")
addmargins(table(LEAP$treatment.group, LEAP$outcome.V60, useNA = "always"))
4/263
6/267
4/267
5/267
32/263
33/263
34/263
35/263
36/263
4/267
5/267
6/267
help(recode)
View(LEAP)
LEAP$outcome = LEAP$outcome.V60
d = LEAP$outcome.V60 == NA && LEAP$treatment.group == "Peanut Consumption"
table(d)
d
d = LEAP$is.na(outcome.V60) && LEAP$treatment.group == "Peanut Consumption"
d = is.na(LEAP$outcome.V60) && LEAP$treatment.group == "Peanut Consumption"
d
d = is.na(LEAP$outcome.V60) &&
TRUE
d = is.na(LEAP$outcome.V60)
table(d)
addmargins(table(LEAP$treatment.group, LEAP$outcome.V60, useNA = "always"))
36/263
6/267
5/267
e = LEAP$treatment.group == "Peanut Avoidance"
table(e)
LEAP$outcome[d & e] = "Allergic"
View(LEAP)
LEAP$outcome[d & f] = Allergic
LEAP$outcome[d & f] = "Allergic"
f = LEAP$treatment.group == "Peanut Consumption"
g = d & LEAP$participant.ID == "LEAP_108566"
LEAP$outcome[d & f] = "Allergic"
LEAP$outcome = LEAP$outcome.V60
d = is.na(LEAP$outcome.V60)
e = LEAP$treatment.group == "Peanut Avoidance"
LEAP$outcome[d & e] = "Allergic"
f = LEAP$treatment.group == "Peanut Consumption"
g = d & LEAP$participant.ID == "LEAP_108566"
LEAP$outcome[f & g] = "Allergic"
h = d & LEAP$participant.ID == "LEAP_794123"
LEAP$outcome[f & h] = "Indeterminate"
save(LEAP, file="LEAP.Rdata")
addmargins(table(LEAP$treatment.group, LEAP$outcome, useNA = "always"))
36/263
37/263
setwd("~/oi_biostat/data/leap/excel")
LEAP = read.csv("leap_demo_outcome.csv")
setwd("~/oi_biostat/data/leap")
LEAP[LEAP==""] = NA
LEAP = droplevels(LEAP)
# find children in the ITT analysis and with pos skin prick test
a = LEAP$intent.to.treat == "Yes"
b = (LEAP$Baseline.Skin.Prick.Test == 0)
c = a & b
LEAP = LEAP[c,]
View(LEAP)
addmargins(table(LEAP$treatment.group, LEAP$overall.V60.outcome, useNA = "always"))
36/263
5/267
setwd("~/oi_biostat/data/leap/excel")
LEAP = read.csv("leap_demo_outcome.csv")
setwd("~/oi_biostat/data/leap")
LEAP[LEAP==""] = NA
LEAP = droplevels(LEAP)
# find children in the ITT analysis and with pos skin prick test
a = LEAP$intent.to.treat == "Yes"
b = (LEAP$Baseline.Skin.Prick.Test == 0)
c = a & b
LEAP = LEAP[c,]
save(LEAP, file="LEAP.Rdata")
addmargins(table(LEAP$treatment.group, LEAP$outcome, useNA = "ifany"))
xtable(LEAP[c(1,2,3,529, 530),c( "participant.ID", "treatment.group", overall.V60.outcome])
xtable(LEAP[c(1,2,3,529, 530),c( "participant.ID", "treatment.group", "overall.V60.outcome"])
xtable(LEAP[c(1,2,3,529, 530),c( "participant.ID", "treatment.group", "overall.V60.outcome")])
library(xtable)
xtable(LEAP[c(1,2,3,529, 530),c( "participant.ID", "treatment.group", "overall.V60.outcome")])
addmargins(table(LEAP$treatment.group, LEAP$outcome, useNA = "ifany"))
addmargins(table(LEAP$treatment.group, LEAP$overall.V60.outcome))
xtable[LEAP$treatment.group, LEAP$overall.V60.outcome]
table(LEAP$treatment.group, LEAP$overall.V60.outcome)
help(xtable)
outcome.table = table(LEAP$treatment.group, LEAP$overall.V60.outcome)
xtable(outcome.table)
outcome.table = addmargins(table(LEAP$treatment.group, LEAP$overall.V60.outcome))
xtable(outcome.table)
xtable(outcome.table, caption = "peanutStudyOutcome")
xtable(outcome.table, caption = "peanutStudyResults")
xtable(outcome.table, digits = 0, caption = "peanutStudyResults")
36/263
5/267
(36/263)/(5/267)
13.7 - 1.9
